package app.groceryapp.ui.fragment.home;import android.content.Context;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import org.jetbrains.annotations.NotNull;import java.util.ArrayList;import java.util.List;import androidx.annotation.NonNull;import app.groceryapp.data.model.api.response.category.Category;import app.groceryapp.data.model.api.response.category.SubCategory;import app.groceryapp.databinding.FragmentHomeBinding;import app.groceryapp.ui.base.BaseFragment;import app.groceryapp.ui.fragment.home.adapter.CategorySubCategoryAdapter;public class HomeFragment extends BaseFragment<HomeFragmentViewModel> implements    iHomeFragmentContract.iHomeFragmentNavigator,    CategorySubCategoryAdapter.CategorySubCategoryAdapterListener {    private FragmentHomeBinding binding;    private HomeFragmentViewModel viewModel;    private HomeFragmentListener listener;    private CategorySubCategoryAdapter categoryAdapter;    private List<Category> categoryList = new ArrayList<>();    private int lastExpandedPosition = 0;    public interface HomeFragmentListener {        List<Category> getCategoryList();    }    @Override    public void onAttach(@NotNull Context context) {        super.onAttach(context);        listener = (HomeFragmentListener) context;    }    public static HomeFragment newInstance() {        Bundle args = new Bundle();        HomeFragment fragment = new HomeFragment();        fragment.setArguments(args);        return fragment;    }    @Override    public void setViewModel() {        viewModel = (HomeFragmentViewModel) prepareViewModel(HomeFragmentViewModel.class);    }    @Override    public void setNavigator() {        viewModel.setNavigator(this);    }    public View onCreateView(@NonNull LayoutInflater inflater,                             ViewGroup container, Bundle savedInstanceState) {        binding = FragmentHomeBinding.inflate(getLayoutInflater(), container, false);        return binding.getRoot();    }    @Override    public void onViewCreated(@NonNull View view, Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        setCategoryAdapter();        setExpandListener();    }    private void setExpandListener() {        binding.elvCategoryList.setOnGroupExpandListener(groupPosition -> {            if (lastExpandedPosition != groupPosition) {                binding.elvCategoryList.collapseGroup(lastExpandedPosition);            }            lastExpandedPosition = groupPosition;        });    }    private void setCategoryAdapter() {        if (listener != null) {            categoryList.clear();            categoryList.addAll(listener.getCategoryList());        }        categoryAdapter = new CategorySubCategoryAdapter(categoryList, this);        binding.elvCategoryList.setAdapter(categoryAdapter);    }    /**     * CategorySubCategoryAdapter.CategorySubCategoryAdapterListener     *     * @param category Category     * @param subCategory SubCategory     */    @Override    public void onSubCategoryItemClick(Category category, SubCategory subCategory) {    }}