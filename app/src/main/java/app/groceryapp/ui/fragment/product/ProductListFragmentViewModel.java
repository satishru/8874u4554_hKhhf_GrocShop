package app.groceryapp.ui.fragment.product;import app.groceryapp.data.DataManager;import app.groceryapp.data.model.api.response.category.SubCategory;import app.groceryapp.ui.base.BaseViewModel;import app.groceryapp.utils.constants.ApiConstants;import app.groceryapp.utils.rx.SchedulerProvider;public class ProductListFragmentViewModel extends BaseViewModel<iProductListFragmentContract.iProductListFragmentNavigator> implements iProductListFragmentContract.iProductListFragmentViewModel {    public ProductListFragmentViewModel(DataManager dataManager, SchedulerProvider schedulerProvider) {        super(dataManager, schedulerProvider);    }    @Override    public void getProducts(SubCategory subCategory, int childCategoryId, int page) {        if (getNavigator().isNetWorkConnected()) {            showLoader(true);            getDisposable().add(getDataManager()                .getProducts(ApiConstants.getParamsForGetProductsApi(subCategory, childCategoryId, page))                .subscribeOn(getSchedulerProvider().io())                .observeOn(getSchedulerProvider().ui())                .subscribe(dataResponse -> {                    showLoader(false);                    if (isError(dataResponse)) {                        getNavigator().showToast(dataResponse.getErrorMessage());                    } else {                        getNavigator().updateProducts(dataResponse.getProducts());                    }                }, throwable -> {                    showLoader(false);                    getNavigator().showToast(throwable.getLocalizedMessage());                }));        }    }}