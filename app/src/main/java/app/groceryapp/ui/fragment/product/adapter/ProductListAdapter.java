package app.groceryapp.ui.fragment.product.adapter;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import com.bumptech.glide.Glide;import java.util.List;import androidx.annotation.NonNull;import androidx.recyclerview.widget.RecyclerView;import app.groceryapp.R;import app.groceryapp.data.model.api.response.product.Product;import app.groceryapp.data.model.api.response.product.ProductQuantity;import app.groceryapp.databinding.LayoutProductListItemBinding;import app.groceryapp.ui.base.BaseProductListViewHolder;import app.groceryapp.ui.custom.GroceryAddItemLayout;import app.groceryapp.utils.CommonUtils;public class ProductListAdapter extends RecyclerView.Adapter<ProductListAdapter.ProductListViewHolder> {    private List<Product> productList;    public ProductListAdapter(List<Product> productList) {        this.productList = productList;    }    @NonNull    @Override    public ProductListViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        LayoutProductListItemBinding binding = LayoutProductListItemBinding.inflate(LayoutInflater.from(parent.getContext()), parent, false);        return new ProductListViewHolder(binding);    }    @Override    public void onBindViewHolder(@NonNull ProductListViewHolder holder, int position) {        holder.onBind(position);    }    @Override    public int getItemCount() {        return productList.size();    }    class ProductListViewHolder extends BaseProductListViewHolder {        private LayoutProductListItemBinding binding;        public ProductListViewHolder(LayoutProductListItemBinding binding) {            super(binding.getRoot());            this.binding = binding;        }        @Override        public void onBind(int position) {            Product product = productList.get(position);            binding.tvProductName.setText(product.getProductName());            setDetails(product);            Glide.with(binding.getRoot().getContext()).                load(product.getImageFullPath()).                animate(R.anim.fade_in).                into(binding.ivProductImage);        }        private void setDetails(Product product) {            if (product.getProductQuantityList().size() > 0) {                ProductQuantity productQuantity = product.getProductQuantityList().get(0);                if (product.getProductQuantityList().size() > 1) {                    binding.tvProductQuantity.setCompoundDrawablesWithIntrinsicBounds(0,0,R.drawable.ic_arrow_down,0);                } else {                    binding.tvProductQuantity.setCompoundDrawablesWithIntrinsicBounds(0,0,0,0);                }                binding.tvProductQuantity.setText(getProductQuantity(productQuantity));                binding.tvPrice.setText(getProductPrice(productQuantity));                binding.tvStrikedPrice.setText(getProductStrikedPrice(productQuantity));                String offer = getProductOffer(productQuantity);                if (!CommonUtils.isNullOrEmpty(offer)) {                    binding.tvOfferPercent.setVisibility(View.VISIBLE);                    binding.tvOfferPercent.setText(offer);                } else {                    binding.tvOfferPercent.setVisibility(View.GONE);                }                binding.layoutAddItem.setMaxItemCount(10);                binding.layoutAddItem.setListener(new GroceryAddItemLayout.GroceryAddItemLayoutListener() {                    @Override                    public void onMaxItemCountReached() {                    }                    @Override                    public void onItemCountChanged(int itemsCount) {                    }                });            }        }    }}