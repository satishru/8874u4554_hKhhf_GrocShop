package app.groceryapp.ui.activity.main;import android.app.Activity;import android.content.Intent;import android.content.res.Configuration;import android.os.Bundle;import android.view.Menu;import android.view.View;import android.widget.Toast;import org.jetbrains.annotations.NotNull;import java.util.ArrayList;import java.util.List;import androidx.annotation.NonNull;import androidx.appcompat.app.ActionBarDrawerToggle;import androidx.core.view.GravityCompat;import androidx.recyclerview.widget.LinearLayoutManager;import app.groceryapp.R;import app.groceryapp.data.model.api.response.category.Category;import app.groceryapp.data.model.api.response.category.SubCategory;import app.groceryapp.databinding.ActivityMainBinding;import app.groceryapp.enums.HomeMenuEnum;import app.groceryapp.ui.HomeSideMenuAdapter;import app.groceryapp.ui.base.BaseActivity;import app.groceryapp.ui.fragment.home.HomeFragment;import app.groceryapp.utils.AppUtils;//https://www.intertech.com/Blog/android-custom-view-tutorial-part-1-combining-existing-views/public class MainActivity extends BaseActivity<MainActivityViewModel> implements    HomeSideMenuAdapter.HomeSideMenuAdapterListener,    iMainActivityContract.iMainActivityNavigator,    HomeFragment.HomeFragmentListener {    private ActivityMainBinding binding;    private MainActivityViewModel viewModel;    private ActionBarDrawerToggle mDrawerToggle;    private List<Category> categoryList = new ArrayList<>();    @NotNull    public static Intent getIntent(Activity activity) {        Intent intent = new Intent(activity, MainActivity.class);        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);        return intent;    }    @Override    public void setViewBinding() {        binding = ActivityMainBinding.inflate(getLayoutInflater());        setContentView(binding.getRoot());    }    @Override    public void setViewModel() {        viewModel = (MainActivityViewModel) prepareViewModel(MainActivityViewModel.class);    }    @Override    public void setNavigator() {        viewModel.setNavigator(this);    }    @Override    public void handleErrorLayout(String errorTitle, String errorMessage) {        binding.incAppBarMain.incContentMain.rlContent.llError.setVisibility(View.VISIBLE);        binding.incAppBarMain.incContentMain.rlContent.tvErrorTitle.setText(errorTitle);        binding.incAppBarMain.incContentMain.rlContent.tvErrorInfo.setText(errorMessage);        binding.incAppBarMain.incContentMain.rlContent.btnRetry.setOnClickListener(view -> {            binding.incAppBarMain.incContentMain.rlContent.llError.setVisibility(View.GONE);            viewModel.loadCategory();        });    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setToolBar();        setUpDrawerMenu();        viewModel.loadCategory();    }    private void setToolBar() {        setToolBar(binding.incAppBarMain.toolbar, 0, true);        if (getSupportActionBar() != null) {            getSupportActionBar().setHomeButtonEnabled(true);        }    }    private void setUpDrawerMenu() {        binding.rvMenuList.setLayoutManager(new LinearLayoutManager(MainActivity.this));        HomeSideMenuAdapter homeSideMenuAdapter = new HomeSideMenuAdapter(AppUtils.getSideMenuList(), this);        binding.rvMenuList.setAdapter(homeSideMenuAdapter);        mDrawerToggle = new ActionBarDrawerToggle(this, binding.drawerLayout, binding.incAppBarMain.toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);        binding.drawerLayout.addDrawerListener(mDrawerToggle);        mDrawerToggle.syncState();    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        getMenuInflater().inflate(R.menu.main, menu);        return true;    }    private void closeDrawer() {        binding.drawerLayout.closeDrawers();    }    @Override    public void onPostCreate(Bundle savedInstanceState) {        super.onPostCreate(savedInstanceState);    }    @Override    public void onConfigurationChanged(@NonNull Configuration newConfig) {        super.onConfigurationChanged(newConfig);        mDrawerToggle.onConfigurationChanged(newConfig);    }    @Override    public void onBackPressed() {        if (binding.drawerLayout.isDrawerOpen(GravityCompat.START)) {            binding.drawerLayout.closeDrawer(GravityCompat.START);        } else {            super.onBackPressed();        }    }    @Override    public void onSideMenuListItemClick(@NotNull HomeMenuEnum homeMenuEnum) {        switch (homeMenuEnum) {            case MANAGE_ACCOUNT:                Toast.makeText(MainActivity.this, HomeMenuEnum.MANAGE_ACCOUNT.getMenuName(),                    Toast.LENGTH_SHORT).show();                break;            case TRANSACTION:                Toast.makeText(this, HomeMenuEnum.TRANSACTION.getMenuName(),                    Toast.LENGTH_SHORT).show();                break;            case RECURRING:                Toast.makeText(this, HomeMenuEnum.RECURRING.getMenuName(),                    Toast.LENGTH_SHORT).show();                break;            case VOLUNTEER:                Toast.makeText(this, HomeMenuEnum.VOLUNTEER.getMenuName(),                    Toast.LENGTH_SHORT).show();                break;        }        closeDrawer();    }    /**     * iMainActivityContract.iMainActivityNavigator     *     * @param categoryList Category List     */    @Override    public void setCategoryData(List<Category> categoryList) {        if (categoryList != null) {            this.categoryList.clear();            this.categoryList.addAll(categoryList);            loadFragment(HomeFragment.newInstance(),                binding.incAppBarMain.incContentMain.fragmentContainer.getId(), true, true);        }    }    /**     * HomeFragment.HomeFragmentListener     *     * @return Category List     */    @Override    public List<Category> getCategoryList() {        return categoryList;    }    @Override    public void openProductListActivity(Category category, SubCategory subCategory) {    }}