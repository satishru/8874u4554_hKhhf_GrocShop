package app.groceryapp.ui.activity.product;import android.app.Activity;import android.content.Intent;import android.os.Bundle;import android.view.MenuItem;import android.view.View;import com.google.android.material.tabs.TabLayout;import org.jetbrains.annotations.NotNull;import androidx.fragment.app.FragmentPagerAdapter;import app.groceryapp.data.model.api.response.category.Category;import app.groceryapp.data.model.api.response.category.SubCategory;import app.groceryapp.databinding.ActivityProductListBinding;import app.groceryapp.ui.activity.product.adapter.ProductListPagerAdapter;import app.groceryapp.ui.base.BaseActivity;import app.groceryapp.utils.CommonUtils;import app.groceryapp.utils.constants.BundleConstants;public class ProductListActivity extends BaseActivity<ProductListActivityViewModel> implements iProductListActivityContract.iProductListActivityNavigator {    private ActivityProductListBinding binding;    private ProductListActivityViewModel viewModel;    private Category category;    private SubCategory subCategory;    private static final int OFF_SCREEN = 4;    @NotNull    public static Intent getIntent(Activity activity, Category category, SubCategory subCategory) {        Intent intent = new Intent(activity, ProductListActivity.class);        intent.putExtra(BundleConstants.INTENT_CATEGORY, CommonUtils.convertObjToJson(category));        intent.putExtra(BundleConstants.INTENT_SUB_CATEGORY, CommonUtils.convertObjToJson(subCategory));        return intent;    }    @Override    public void setViewBinding() {        binding = ActivityProductListBinding.inflate(getLayoutInflater());        setContentView(binding.getRoot());    }    @Override    public void setViewModel() {        viewModel = (ProductListActivityViewModel) prepareViewModel(ProductListActivityViewModel.class);    }    @Override    public void setNavigator() {        viewModel.setNavigator(this);    }    @Override    public void handleErrorLayout(String errorTitle, String errorMessage) {        binding.rlContent.llError.setVisibility(View.VISIBLE);        binding.rlContent.tvErrorTitle.setText(errorTitle);        binding.rlContent.tvErrorInfo.setText(errorMessage);        binding.rlContent.btnRetry.setOnClickListener(view -> {            binding.rlContent.llError.setVisibility(View.GONE);            //viewModel.loadCategory();        });    }    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        getBundleData();        setToolBar(binding.incToolbar.toolbar, category.getCategoryName(), true);        setUpProductListViewPager();        binding.incToolbar.flCart.setOnClickListener(view -> showToast("Cart Click"));    }    @Override    protected void onResume() {        super.onResume();        setCartCount(binding.incToolbar.tvCartCount);    }    private void getBundleData() {        category = CommonUtils.convertJsonToObj(getIntent().getStringExtra(BundleConstants.INTENT_CATEGORY), Category.class);        subCategory = CommonUtils.convertJsonToObj(getIntent().getStringExtra(BundleConstants.INTENT_SUB_CATEGORY), SubCategory.class);    }    private void setUpProductListViewPager() {        ProductListPagerAdapter adapter = new ProductListPagerAdapter(            getSupportFragmentManager(), FragmentPagerAdapter.BEHAVIOR_RESUME_ONLY_CURRENT_FRAGMENT, subCategory);        binding.vpProducts.setAdapter(adapter);        binding.vpProducts.setOffscreenPageLimit(OFF_SCREEN);        binding.vpProducts.addOnPageChangeListener(            new TabLayout.TabLayoutOnPageChangeListener(binding.tabLayout));        binding.tabLayout.setupWithViewPager(binding.vpProducts);        if (subCategory.getSubSubCategoryList().size() == 0) {            binding.tabLayout.setVisibility(View.GONE);        }        binding.tabLayout.addOnTabSelectedListener(            new TabLayout.OnTabSelectedListener() {                @Override                public void onTabSelected(TabLayout.Tab tab) {                    binding.vpProducts.setCurrentItem(tab.getPosition());                }                @Override                public void onTabUnselected(TabLayout.Tab tab) {                }                @Override                public void onTabReselected(TabLayout.Tab tab) {                }            });    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        if (item.getItemId() == android.R.id.home) {            onBackPressed();            return true;        }        return super.onOptionsItemSelected(item);    }}