package app.groceryapp.ui.custom;import android.content.Context;import android.content.res.TypedArray;import android.graphics.Typeface;import android.util.AttributeSet;import androidx.appcompat.widget.AppCompatTextView;import androidx.core.content.res.ResourcesCompat;import app.groceryapp.R;import app.groceryapp.enums.FontTypeEnum;public class GroceryTextView extends AppCompatTextView {    public GroceryTextView(Context context) {        super(context);    }    public GroceryTextView(Context context, AttributeSet attrs) {        super(context, attrs);        setFontFamily(context, attrs);    }    public GroceryTextView(Context context, AttributeSet attrs, int defStyleAttr) {        super(context, attrs, defStyleAttr);        setFontFamily(context, attrs);    }    public void setFontFamily(Context context, AttributeSet attrs) {        int setFontFamily;        TypedArray typedArray = context.getTheme().obtainStyledAttributes(            attrs, R.styleable.GroceryTextView, 0, 0);        try {            setFontFamily = typedArray.getInteger(R.styleable.GroceryTextView_custom_font, 0);            setTypeface(getTypeFace(setFontFamily));        } finally {            typedArray.recycle();        }    }    public Typeface getTypeFace(int type) {        Typeface typeface = null;        try {            typeface = ResourcesCompat.getFont(getContext(), FontTypeEnum.getValue(type).getFontId());            /*switch (FontTypeEnum.getValue(type)) {                default:                case REGULAR_TYPE:                    typeface = ResourcesCompat.getFont(getContext(), REGULAR_TYPE.getFontId());                    break;                case THIN_TYPE:                    typeface = ResourcesCompat.getFont(getContext(), THIN_TYPE.getFontId());                    break;                case MEDIUM_TYPE:                    typeface = ResourcesCompat.getFont(getContext(), MEDIUM_TYPE.getFontId());                    break;                case BOLD_TYPE:                    typeface = ResourcesCompat.getFont(getContext(), BOLD_TYPE.getFontId());                    break;                case SEMI_BOLD_TYPE:                    typeface = ResourcesCompat.getFont(getContext(), SEMI_BOLD_TYPE.getFontId());                    break;                case EXTRA_BOLD_TYPE:                    typeface = ResourcesCompat.getFont(getContext(), EXTRA_BOLD_TYPE.getFontId());                    break;                case BLACK_TYPE:                    typeface = ResourcesCompat.getFont(getContext(), BLACK_TYPE.getFontId());                    break;            }*/        } catch (Exception e) {            e.printStackTrace();        }        return typeface;    }}